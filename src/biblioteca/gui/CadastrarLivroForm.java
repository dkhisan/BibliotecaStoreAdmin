/*
 * Copyright (C) 2018 hisan
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package biblioteca.gui;

import biblioteca.dao.LivroDAO;
import biblioteca.entity.Livro;
import biblioteca.gui.exceptions.CampoObrigatorioVazioException;
import biblioteca.gui.exceptions.NotaForaDoIntervaloException;
import biblioteca.util.BibliotecaStoreUtil;
import java.text.ParseException;
import javax.swing.JOptionPane;
import org.hibernate.SessionFactory;

public class CadastrarLivroForm extends javax.swing.JFrame {

    public CadastrarLivroForm() {
        initComponents();
        reOpen();
    }
    
    public void reOpen() {
        setLocationRelativeTo(null);
        setVisible(true);
    }
    
    private void cadastrarLivro() throws CampoObrigatorioVazioException, NotaForaDoIntervaloException,
                                         NumberFormatException, ParseException {
        SessionFactory factory = null;
        LivroDAO dao = null;
        Livro livro = null;
        java.text.SimpleDateFormat sdf = null;
        java.util.Date date = null;
        java.util.Date dataf = null;
        
        int    ano = 0;
        float nota = 0.0f;
        
        if (txTitulo.getText().trim() == null || txTitulo.getText().trim().equals("") ||
            txAutor.getText().trim() == null || txAutor.getText().trim().equals("") ||
            txAnoLancamento.getText().trim() == null || txAnoLancamento.getText().trim().equals("") ||
            txNotaLeitor.getText().trim() == null || txNotaLeitor.getText().trim().equals(""))
            throw new CampoObrigatorioVazioException("Alguns campos estão vazios, verifique-os e tente novamente.");
        
        try {
            // Teste se o usuário colocou ',' como precisão decimal
            if (txNotaLeitor.getText().trim().contains(",")) {
                txNotaLeitor.setText(txNotaLeitor.getText().trim().replace(',', '.'));
            }
            ano  = Integer.parseInt(txAnoLancamento.getText().trim());
            nota = Float.parseFloat(txNotaLeitor.getText().trim());
        } catch (NumberFormatException e) {
            throw(e);
        }
        
        if (nota < 0 || nota > 10) {
            throw new NotaForaDoIntervaloException("A nota informada está fora do intervalo de 0 à 10.");
        }
        
        sdf = new java.text.SimpleDateFormat("yyyy/MM/dd hh:mm:ss");
        date = new java.util.Date();
        
        try {
            dataf = sdf.parse(sdf.format(date));
        } catch (ParseException e) {
            throw(e);
        }
        
        factory = BibliotecaStoreUtil.getSessionFactory();
        dao = new LivroDAO(factory);
        livro = new Livro();
        
        livro.setTitulo(txTitulo.getText().trim());
        livro.setAutor(txAutor.getText().trim());
        livro.setLancamento((short)ano);
        livro.setNota(nota);
        livro.setCadastro(dataf);
        
        if (txResenha.getText().trim() != null || txResenha.getText().trim().equals("")) {
            livro.setResenha(txResenha.getText().trim());
        }
        
        dao.insert(livro);
        
        if (dao.isLastSuccess()) {
            JOptionPane.showMessageDialog(this, String.format(
                    "O Livro \"%s\" foi cadastrado com êxito.", livro.getTitulo()));
        } else {
            JOptionPane.showMessageDialog(this,
                    dao.getLastErrorMessage(), "Falha", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnTop = new javax.swing.JPanel();
        pnCentro = new javax.swing.JPanel();
        pnCentroEsq = new javax.swing.JPanel();
        lbTitulo = new javax.swing.JLabel();
        txTitulo = new javax.swing.JTextField();
        lbImagem = new javax.swing.JLabel();
        pnImagemChoose = new javax.swing.JPanel();
        btnImagemChoose = new javax.swing.JButton();
        lbImagemChoose = new javax.swing.JLabel();
        lbAutor = new javax.swing.JLabel();
        txAutor = new javax.swing.JTextField();
        pnAnoNota = new javax.swing.JPanel();
        pnAno = new javax.swing.JPanel();
        lbAnoLancamento = new javax.swing.JLabel();
        txAnoLancamento = new javax.swing.JTextField();
        pnNota = new javax.swing.JPanel();
        lbNotaLeitor = new javax.swing.JLabel();
        txNotaLeitor = new javax.swing.JTextField();
        pnCentroDir = new javax.swing.JPanel();
        lbResenha = new javax.swing.JLabel();
        scrlTextResenha = new javax.swing.JScrollPane();
        txResenha = new javax.swing.JTextArea();
        pnSul = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnEsq = new javax.swing.JPanel();
        pnDir = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar livro");
        setResizable(false);
        setSize(new java.awt.Dimension(562, 340));
        getContentPane().setLayout(new java.awt.BorderLayout(5, 5));
        getContentPane().add(pnTop, java.awt.BorderLayout.PAGE_START);

        pnCentro.setLayout(new java.awt.GridLayout(1, 2, 10, 5));

        pnCentroEsq.setLayout(new java.awt.GridLayout(7, 1, 5, 5));

        lbTitulo.setText("Título");
        pnCentroEsq.add(lbTitulo);
        pnCentroEsq.add(txTitulo);

        lbImagem.setText("Imagem");
        pnCentroEsq.add(lbImagem);

        pnImagemChoose.setLayout(new java.awt.BorderLayout(5, 5));

        btnImagemChoose.setText("Procurar");
        btnImagemChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagemChooseActionPerformed(evt);
            }
        });
        pnImagemChoose.add(btnImagemChoose, java.awt.BorderLayout.LINE_START);

        lbImagemChoose.setText("Nenhuma imagem selecionada");
        pnImagemChoose.add(lbImagemChoose, java.awt.BorderLayout.CENTER);

        pnCentroEsq.add(pnImagemChoose);

        lbAutor.setText("Autor");
        lbAutor.setAutoscrolls(true);
        pnCentroEsq.add(lbAutor);
        pnCentroEsq.add(txAutor);

        pnAnoNota.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        pnAno.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lbAnoLancamento.setText("Ano");
        pnAno.add(lbAnoLancamento);

        txAnoLancamento.setColumns(6);
        pnAno.add(txAnoLancamento);

        pnAnoNota.add(pnAno);

        lbNotaLeitor.setText("Nota");
        pnNota.add(lbNotaLeitor);

        txNotaLeitor.setColumns(6);
        pnNota.add(txNotaLeitor);

        pnAnoNota.add(pnNota);

        pnCentroEsq.add(pnAnoNota);

        pnCentro.add(pnCentroEsq);

        pnCentroDir.setLayout(new java.awt.BorderLayout(10, 10));

        lbResenha.setText("Resenha");
        pnCentroDir.add(lbResenha, java.awt.BorderLayout.PAGE_START);

        txResenha.setColumns(20);
        txResenha.setRows(5);
        txResenha.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        scrlTextResenha.setViewportView(txResenha);

        pnCentroDir.add(scrlTextResenha, java.awt.BorderLayout.CENTER);

        pnCentro.add(pnCentroDir);

        getContentPane().add(pnCentro, java.awt.BorderLayout.CENTER);

        pnSul.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        pnSul.add(btnCadastrar);

        btnCancelar.setText("Cancelar");
        btnCancelar.setMaximumSize(new java.awt.Dimension(87, 32));
        btnCancelar.setMinimumSize(new java.awt.Dimension(87, 32));
        btnCancelar.setPreferredSize(new java.awt.Dimension(87, 32));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnSul.add(btnCancelar);

        getContentPane().add(pnSul, java.awt.BorderLayout.PAGE_END);
        getContentPane().add(pnEsq, java.awt.BorderLayout.LINE_START);
        getContentPane().add(pnDir, java.awt.BorderLayout.LINE_END);

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            cadastrarLivro();
        } catch (CampoObrigatorioVazioException | NotaForaDoIntervaloException |
                NumberFormatException | ParseException e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage(), "Atenção", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnImagemChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagemChooseActionPerformed
        
    }//GEN-LAST:event_btnImagemChooseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnImagemChoose;
    private javax.swing.JLabel lbAnoLancamento;
    private javax.swing.JLabel lbAutor;
    private javax.swing.JLabel lbImagem;
    private javax.swing.JLabel lbImagemChoose;
    private javax.swing.JLabel lbNotaLeitor;
    private javax.swing.JLabel lbResenha;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JPanel pnAno;
    private javax.swing.JPanel pnAnoNota;
    private javax.swing.JPanel pnCentro;
    private javax.swing.JPanel pnCentroDir;
    private javax.swing.JPanel pnCentroEsq;
    private javax.swing.JPanel pnDir;
    private javax.swing.JPanel pnEsq;
    private javax.swing.JPanel pnImagemChoose;
    private javax.swing.JPanel pnNota;
    private javax.swing.JPanel pnSul;
    private javax.swing.JPanel pnTop;
    private javax.swing.JScrollPane scrlTextResenha;
    private javax.swing.JTextField txAnoLancamento;
    private javax.swing.JTextField txAutor;
    private javax.swing.JTextField txNotaLeitor;
    private javax.swing.JTextArea txResenha;
    private javax.swing.JTextField txTitulo;
    // End of variables declaration//GEN-END:variables
}
